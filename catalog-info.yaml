apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: 'credit-flow-application'
  description: 'Credit Flow monolithich for Red Hat Developer Hub'
  annotations:
    github.com/project-slug: maximilianopizarro/credit-flow-application
    backstage.io/techdocs-ref: dir:.
    backstage.io/kubernetes-namespace: credit-flow-application-dev
    backstage.io/kubernetes-id: credit-flow-application
    janus-idp.io/tekton: credit-flow-application
    backstage.io/kubernetes-label-selector: 'app=credit-flow-application'
    # La URL del swagger-api debe usar el formato RAW para evitar 401/400
    backstage.io/swagger-api: 'https://raw.githubusercontent.com/maximilianopizarro/credit-flow-application/main/openapi.yaml'
  links:
    - title: Documentation
      url: https://github.com/maximilianoPizarro/credit-flow-application/blob/main/README.md
    - url: https://workspaces.openshift.com/#https://github.com/maximilianoPizarro/credit-flow-application/tree/main?storageType=ephemeral
      title: OpenShift Dev Spaces (VS Code)
      icon: web
  tags:
    - java
    - dev
spec:
  type: service
  lifecycle: experimental
  owner: 'group:default/maximilianopizarro'

---

apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: credit-flow-rest-api # Nombre actualizado
  description: "REST API for Credit Flow Application (Account, Clients, Loans)"
  annotations:
    # Vincula esta API al componente principal
    backstage.io/owned-by: 'credit-flow-application'
spec:
  # DefiniciÃ³n de la API
  type: openapi 
  lifecycle: production
  owner: 'group:default/maximilianopizarro'
  system: credit-flow-application
  definition: |
    # ðŸ‘‡ Todo el contenido de la especificaciÃ³n OpenAPI debe estar
    #    indentado y contenido en la clave 'definition' como un string.
    openapi: 3.0.3
    info:
      title: credit-flow-appication API
      version: 1.0.0-SNAPSHOT
    paths:
      /api/account:
        get:
          tags:
          - Account Resource
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/UserDTO"
            "401":
              description: Not Authorized
            "403":
              description: Not Allowed
          security:
          - SecurityScheme: []
        post:
          tags:
          - Account Resource
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/UserDTO"
          responses:
            "200":
              description: OK
      /api/account/change-password:
        post:
          tags:
          - Account Resource
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/PasswordChangeDTO"
          responses:
            "200":
              description: OK
      /api/account/reset-password/finish:
        post:
          tags:
          - Account Resource
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/KeyAndPasswordVM"
          responses:
            "200":
              description: OK
      /api/account/reset-password/init:
        post:
          tags:
          - Account Resource
          requestBody:
            content:
              text/plain:
                schema:
                  type: string
          responses:
            "200":
              description: OK
      /api/activate:
        get:
          tags:
          - Account Resource
          parameters:
          - name: key
            in: query
            schema:
              type: string
          responses:
            "204":
              description: No Content
      /api/admin/users:
        get:
          tags:
          - User Resource
          parameters:
          - name: sort
            in: query
            schema:
              type: string
          responses:
            "200":
              description: OK
        put:
          tags:
          - User Resource
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/UserDTO"
          responses:
            "200":
              description: OK
            "401":
              description: Not Authorized
            "403":
              description: Not Allowed
          security:
          - SecurityScheme: []
        post:
          tags:
          - User Resource
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/UserDTO"
          responses:
            "200":
              description: OK
            "401":
              description: Not Authorized
            "403":
              description: Not Allowed
          security:
          - SecurityScheme: []
      /api/admin/users/{login}:
        get:
          tags:
          - User Resource
          parameters:
          - name: login
            in: path
            required: true
            schema:
              type: string
          responses:
            "200":
              description: OK
        delete:
          tags:
          - User Resource
          parameters:
          - name: login
            in: path
            required: true
            schema:
              type: string
          responses:
            "200":
              description: OK
            "401":
              description: Not Authorized
            "403":
              description: Not Allowed
          security:
          - SecurityScheme: []
      /api/authenticate:
        get:
          tags:
          - Account Resource
          responses:
            "200":
              description: OK
              content:
                text/plain:
                  schema:
                    type: string
        post:
          tags:
          - User JWT Controller
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/LoginVM"
          responses:
            "200":
              description: OK
      /api/authorities:
        get:
          tags:
          - Authority Resource
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
            "401":
              description: Not Authorized
            "403":
              description: Not Allowed
          security:
          - SecurityScheme: []
      /api/clients:
        get:
          tags:
          - Client Resource
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/ClientDTO"
        post:
          tags:
          - Client Resource
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ClientDTO"
          responses:
            "200":
              description: OK
      /api/clients/{id}:
        get:
          tags:
          - Client Resource
          parameters:
          - name: id
            in: path
            required: true
            schema:
              format: int64
              type: integer
          responses:
            "200":
              description: OK
        put:
          tags:
          - Client Resource
          parameters:
          - name: id
            in: path
            required: true
            schema:
              format: int64
              type: integer
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ClientDTO"
          responses:
            "200":
              description: OK
        delete:
          tags:
          - Client Resource
          parameters:
          - name: id
            in: path
            required: true
            schema:
              format: int64
              type: integer
          responses:
            "200":
              description: OK
      /api/credit-movements:
        get:
          tags:
          - Credit Movement Resource
          parameters:
          - name: page
            in: query
            schema:
              format: int32
              default: 0
              minimum: 0
              exclusiveMinimum: true
              type: integer
          - name: size
            in: query
            schema:
              format: int32
              default: 50
              minimum: 0
              exclusiveMinimum: true
              type: integer
          - name: sort
            in: query
            schema:
              type: array
              items:
                type: string
          responses:
            "200":
              description: OK
        post:
          tags:
          - Credit Movement Resource
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CreditMovementDTO"
          responses:
            "200":
              description: OK
      /api/credit-movements/{id}:
        get:
          tags:
          - Credit Movement Resource
          parameters:
          - name: id
            in: path
            required: true
            schema:
              format: int64
              type: integer
          responses:
            "200":
              description: OK
        put:
          tags:
          - Credit Movement Resource
          parameters:
          - name: id
            in: path
            required: true
            schema:
              format: int64
              type: integer
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CreditMovementDTO"
          responses:
            "200":
              description: OK
        delete:
          tags:
          - Credit Movement Resource
          parameters:
          - name: id
            in: path
            required: true
            schema:
              format: int64
              type: integer
          responses:
            "200":
              description: OK
      /api/credit-plans:
        get:
          tags:
          - Credit Plan Resource
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/CreditPlanDTO"
        post:
          tags:
          - Credit Plan Resource
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CreditPlanDTO"
          responses:
            "200":
              description: OK
      /api/credit-plans/{id}:
        get:
          tags:
          - Credit Plan Resource
          parameters:
          - name: id
            in: path
            required: true
            schema:
              format: int64
              type: integer
          responses:
            "200":
              description: OK
        put:
          tags:
          - Credit Plan Resource
          parameters:
          - name: id
            in: path
            required: true
            schema:
              format: int64
              type: integer
          requestBody:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CreditPlanDTO"
          responses:
            "200":
              description: OK
        delete:
          tags:
          - Credit Plan Resource
          parameters:
          - name: id
            in: path
            required: true
            schema:
              format: int64
              type: integer
          responses:
            "200":
              description: OK
      /api/loans:
        get:
          tags:
          - Loan Resource
          parameters:
          - name: page
            in: query
            schema:
              format: int32
              default: 0
